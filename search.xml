<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[设计模式之策略模式]]></title>
      <url>http://yoursite.com/2016/12/05/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p>转载请注明出处：<a href="http://www.facex.xyz" target="_blank" rel="external">www.facex.xyz</a></p>
<h3 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h3><p>项目中遇到这样的一个需求：分别需要对发送的数据和接受的数据做编码和解码处理，且不同的设备编码和解码方式不同。<br>一般写法是用if-else或者switch-case对设备进行判断，然后根据不同的设备选择相应的编码和解码方式。但是这种方法耦合性高，不易维护，增加设备的支持就需要修改原先的代码，这容易在原本正确的代码中引入新的错误，这也违背了开闭原则。<br>对于这种情况，一种较好的解决方式就是策略模式。</p>
<blockquote>
<p>开闭原则：软件中的对象（类、模块、函数等）应该对于扩展是开放的，但是对于修改是封闭的。</p>
</blockquote>
<h3 id="2-策略模式的定义"><a href="#2-策略模式的定义" class="headerlink" title="2. 策略模式的定义"></a>2. 策略模式的定义</h3><p>策略模式定义了一系列算法，并将每一个算法封装起来，而且使它们还可以相互替换。策略模式让算法独立于使用它的客户而存在。</p>
<h3 id="3-策略模式的使用场景"><a href="#3-策略模式的使用场景" class="headerlink" title="3. 策略模式的使用场景"></a>3. 策略模式的使用场景</h3><ul>
<li>针对同一问题的多种处理方式，仅仅是具体行为有差别时。</li>
<li>需要安全的封装多种同一类型的操作时。</li>
<li>出现同一抽象类有多个子类，而又需要使用if-else或者switch-case来选择具体子类时。</li>
</ul>
<h3 id="4-UML类图"><a href="#4-UML类图" class="headerlink" title="4. UML类图"></a>4. UML类图</h3><p><img src="http://ohnwilkou.bkt.clouddn.com/pattern_strategy.jpg" alt="策略模式"></p>
<hr>
<h3 id="5-重构步骤"><a href="#5-重构步骤" class="headerlink" title="5. 重构步骤"></a>5. 重构步骤</h3><ol>
<li><p>首先定义设备解码编码策略接口类：DeviceCodecStrategy，类中定义decode和encode两个虚拟方法。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DeviceCodecStrategy</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Author: www.facex.xyz</div><div class="line">     * 解码</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">decode</span><span class="params">(<span class="keyword">int</span> data)</span></span>;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Author: www.facex.xyz</div><div class="line">     * 编码</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">encode</span><span class="params">(<span class="keyword">int</span> data)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>定义设备A编码解码策略实现类：DeviceAStrategy，该类实现DeviceCodecStrategy接口。</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeviceAStrategy</span> <span class="keyword">implements</span> <span class="title">DeviceCodecStrategy</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">decode</span><span class="params">(<span class="keyword">int</span> data)</span> </span>&#123;</div><div class="line">      <span class="comment">/**</span></div><div class="line">       * Author: www.facex.xyz</div><div class="line">       * 设备A解码相关方法，这里将需要解码的信息-1</div><div class="line">       */</div><div class="line">        <span class="keyword">return</span> data - <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">encode</span><span class="params">(<span class="keyword">int</span> data)</span> </span>&#123;</div><div class="line">        <span class="comment">/**</span></div><div class="line">         * Author: www.facex.xyz</div><div class="line">         * 设备A编码相关方法，这里将需要解码的信息+1</div><div class="line">         */</div><div class="line">        <span class="keyword">return</span> data + <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>定义角色类：DeviceCodec</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeviceCodec</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> DeviceCodecStrategy mStrategy;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStrategy</span><span class="params">(DeviceCodecStrategy strategy)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.mStrategy = strategy;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">decode</span><span class="params">(<span class="keyword">int</span> data)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mStrategy.decode(data);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">encode</span><span class="params">(<span class="keyword">int</span> data)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mStrategy.encode(data);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>使用策略模式</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">    DeviceCodec deviceCodec = <span class="keyword">new</span> DeviceCodec();</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Author: www.facex.xyz</div><div class="line">     * 设置解码编码策略</div><div class="line">     */</div><div class="line">    deviceCodec.setStrategy(<span class="keyword">new</span> DeviceAStrategy());</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Author: www.facex.xyz</div><div class="line">     * 编码</div><div class="line">     */</div><div class="line">    System.out.println(<span class="string">"设备A编码后："</span> + deviceCodec.encode(<span class="number">10</span>));</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Author: www.facex.xyz</div><div class="line">     * 解码</div><div class="line">     */</div><div class="line">    System.out.println(<span class="string">"设备A解码后："</span> + deviceCodec.decode(<span class="number">10</span>));</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p> 输出结果如下，符合预期：</p>
<blockquote>
<p>设备A编码后：11</p>
<p>设备A解码后：9</p>
</blockquote>
</li>
<li><p>现在我们要支持新的DeviceB设备，同DeviceA，定义设备B编码解码策略实现类：DeviceBStrategy，实现DeviceCodecStrategy接口，使用方式同DeviceA。</p>
 <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeviceBStrategy</span> <span class="keyword">implements</span> <span class="title">DeviceCodecStrategy</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">decode</span><span class="params">(<span class="keyword">int</span> data)</span> </span>&#123;</div><div class="line">      <span class="comment">/**</span></div><div class="line">       * Author: www.facex.xyz</div><div class="line">       * 设备B解码相关方法，这里将需要解码的信息-2</div><div class="line">       */</div><div class="line">        <span class="keyword">return</span> data - <span class="number">2</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">encode</span><span class="params">(<span class="keyword">int</span> data)</span> </span>&#123;</div><div class="line">      <span class="comment">/**</span></div><div class="line">       * Author: www.facex.xyz</div><div class="line">       * 设备B编码相关方法，这里将需要解码的信息+2</div><div class="line">       */</div><div class="line">        <span class="keyword">return</span> data + <span class="number">2</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h3><p>使用策略模式重构代码后，隐藏了编码解码实现，同时可扩展性变强。以后新增加设备只需要实现DeviceCodecStrategy接口，重现decode和encode方法即可，不仅符合了开闭原则，而且逻辑性更强。到此，使用策略模式重构完毕。</p>
<blockquote>
<p>参考文献：《Android源码设计模式解析与实战》</p>
</blockquote>
]]></content>
    </entry>
    
  
  
</search>
